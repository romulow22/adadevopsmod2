version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 8080:15672
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - default_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping", "-q"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  redis:
    image: redis/redis-stack:7.2.0-v8
    container_name: redis
    hostname: redis
    ports:
      - 6379:6379
      - 8081:8001
    volumes:
      - ./redis/data/:/data/
    environment:
      - REDIS_ARGS=--save 60 1000 --appendonly yes
      - REDISTIMESERIES_ARGS="RETENTION_POLICY=20"
    networks:
      - default_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
  minio:
    image: minio/minio:RELEASE.2024-03-07T00-43-48Z
    command: server /data --console-address ":9001"
    container_name: minio
    ports:
      - 9000:9000
      - 8082:9001
    networks:
      - default_net
    volumes:
      - ./minio/data/:/data
    environment:
      - MINIO_ROOT_USER_FILE=minio_root_usr
      - MINIO_ROOT_PASSWORD_FILE=minio_root_pwd
    secrets:
      - minio_root_usr
      - minio_root_pwd
    healthcheck:
      test: >
        /bin/sh -c "
        mc alias set myminio http://localhost:9000 $(cat /run/secrets/minio_root_usr) $(cat /run/secrets/minio_root_pwd);
        mc admin info myminio --insecure;
        "
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s
##### Apenas para validacao do minio #####
#  minio-mc:
#    container_name: minio-mc
#    image: minio/mc:RELEASE.2024-03-07T00-31-49Z
#    stdin_open: true # docker run -i
#    tty: true        # docker run -t
#    depends_on:
#      - minio
#    networks:
#      - default_net
#    secrets:
#      - minio_root_usr
#      - minio_root_pwd
#    entrypoint: >
#      /bin/sh -c "
#      export MINIO_ROOT_USER_FILE=/run/secrets/minio_root_usr;
#      export MINIO_ROOT_PASSWORD_FILE=/run/secrets/minio_root_pwd;
#      export MINIO_ROOT_USER=$$(cat $$MINIO_ROOT_USER_FILE);
#      export MINIO_ROOT_PASSWORD=$$(cat $$MINIO_ROOT_PASSWORD_FILE);
#      export MC_HOST_myminio=http://$$MINIO_ROOT_USER:$$MINIO_ROOT_PASSWORD@minio:9000;
#      /bin/bash"
  baseapp:
    build:
      context: ./app
      dockerfile: containerbase.dockerfile
    container_name: baseapp
    volumes:
      - ./app/producer.py:/app/producer.py
      - ./app/consumer.py:/app/consumer.py
      - ./app/criaamb.py:/app/criaamb.py
    #stdin_open: true # docker run -i
    #tty: true        # docker run -t
    networks:
      - default_net
    #for debugging
    #command: >
    #  /bin/sh -c "/bin/bash"
    secrets:
      - minio_root_usr
      - minio_root_pwd
      - rabbitmq_root_usr
      - rabbitmq_root_pwd
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy  
  criaambapp:
    extends: baseapp
    container_name: criaambapp
    entrypoint: python3 /app/criaamb.py
    depends_on:
      - baseapp      
  producerapp:
    extends: baseapp
    container_name: producerapp
    entrypoint: python3 /app/producer.py
    depends_on:
      criaambapp:
        condition: service_completed_successfully
  consumerapp:
    extends: baseapp
    container_name: consumerapp
    entrypoint: python3 /app/consumer.py
    depends_on:
      criaambapp:
        condition: service_completed_successfully
secrets:
  minio_root_usr:
    file: ./minio/secrets/minio_usr.txt
  minio_root_pwd:
    file: ./minio/secrets/minio_pwd.txt
  rabbitmq_root_usr:
    file: ./rabbitmq/secrets/rabbitmq_usr.txt
  rabbitmq_root_pwd:
    file: ./rabbitmq/secrets/rabbitmq_pwd.txt
networks:
  default_net:
    driver: bridge
    name: rede-default    